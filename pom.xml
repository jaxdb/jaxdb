<!--
  Copyright (c) 2015 JAX-DB

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in
  all copies or substantial portions of the Software.

  You should have received a copy of The MIT License (MIT) along with this
  program. If not, see <http://opensource.org/licenses/MIT/>.
-->
<project
  xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.openjax</groupId>
    <artifactId>root</artifactId>
    <version>1.0.6-SNAPSHOT</version>
  </parent>
  <groupId>org.jaxdb</groupId>
  <artifactId>jaxdb</artifactId>
  <version>0.5.0-SNAPSHOT</version>
  <packaging>pom</packaging>
  <url>https://www.jaxdb.org/</url>
  <name>JAX-DB</name>
  <description>
    JAX-DB (Java Architecture Extension for [Relational] Database Binding) is a framework that cohesively binds the Java Application Layer to a Vendor Agnostic RDBMS Layer.
  </description>
  <organization>
    <name>JAX-DB</name>
    <url>https://www.jaxdb.org/</url>
  </organization>
  <scm>
    <url>https://github.com/jaxdb/jaxdb</url>
    <connection>scm:git:https://github.com/jaxdb/jaxdb.git</connection>
    <developerConnection>scm:git:https://github.com/jaxdb/jaxdb.git</developerConnection>
    <tag>HEAD</tag>
  </scm>
  <licenses>
    <license>
      <name>The MIT License (MIT)</name>
      <url>https://opensource.org/licenses/MIT/</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>safris</id>
      <name>Seva Safris</name>
      <email>seva@safris.org</email>
    </developer>
  </developers>
  <modules>
    <module>ddlx</module>
    <module>sqlx</module>
    <module>jsql</module>
    <module>jaxdb-maven-plugin</module>
    <module>jaxdb-maven-archetype</module>
  </modules>
  <build>
    <testResources>
      <testResource>
        <directory>src/test/resources</directory>
        <excludes>
          <exclude>**/*.sqlx</exclude>
        </excludes>
      </testResource>
    </testResources>
    <plugins>
      <plugin>
        <groupId>org.openjax.xml</groupId>
        <artifactId>xml-maven-plugin</artifactId>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
            </manifest>
          </archive>
        </configuration>
      </plugin>
    </plugins>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <executions>
            <!-- Copy *.sqlx to "jaxdb" subdir to be 1 dir deeper, so xsi:schemaLocation works for SQLxTest#createSql(...) -->
            <execution>
              <id>copy-resources</id>
              <phase>initialize</phase>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <configuration>
                <outputDirectory>${project.build.directory}/test-classes/jaxdb</outputDirectory>
                <resources>
                  <resource>
                    <directory>src/test/resources</directory>
                    <includes>
                      <include>**/*.sqlx</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <plugin>
          <groupId>org.jaxsb</groupId>
          <artifactId>jaxsb-maven-plugin</artifactId>
          <version>2.1.7-SNAPSHOT</version>
        </plugin>
        <plugin>
          <groupId>org.safris.maven</groupId>
          <artifactId>coverallsio-maven-plugin</artifactId>
          <configuration>
            <aggregateOnly>true</aggregateOnly>
          </configuration>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
  <profiles>
    <profile>
      <id>!maven.test.skip</id>
      <activation>
        <property>
          <name>!maven.test.skip</name>
        </property>
      </activation>
      <dependencies>
        <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derby</artifactId>
          <!-- https://db.apache.org/derby/derby_downloads.html -->
          <version>10.14.2.0</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.apache.derby</groupId>
          <artifactId>derbytools</artifactId>
          <version>10.14.2.0</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.xerial</groupId>
          <artifactId>sqlite-jdbc</artifactId>
          <version>3.34.0</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>mysql</groupId>
          <artifactId>mysql-connector-java</artifactId>
          <version>8.0.23</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>org.postgresql</groupId>
          <artifactId>postgresql</artifactId>
          <version>42.2.20</version>
          <scope>test</scope>
        </dependency>
        <dependency>
          <groupId>com.ibm.db2</groupId>
          <artifactId>jcc</artifactId>
          <version>11.5.5.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
    </profile>
    <profile>
      <id>!skipRTests</id>
      <activation>
        <property>
          <name>!skipRTests</name>
        </property>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-antrun-plugin</artifactId>
            <version>3.0.0</version>
            <executions>
              <execution>
                <id>docker-check-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>run</goal>
                </goals>
                <configuration>
                  <exportAntProperties>true</exportAntProperties>
                  <target>
                    <exec executable="/bin/sh" resultproperty="docker.mysql.running">
                      <arg value="-c"/>
                      <arg value="docker inspect --format '{{json .State.Running}}' mysql"/>
                    </exec>
                    <condition property="mysql.running" value="true">
                      <equals arg1="${docker.mysql.running}" arg2="0"/>
                    </condition>
                    <exec executable="/bin/sh" resultproperty="docker.postgres.running">
                      <arg value="-c"/>
                      <arg value="docker inspect --format '{{json .State.Running}}' postgres"/>
                    </exec>
                    <condition property="postgres.running" value="true">
                      <equals arg1="${docker.postgres.running}" arg2="0"/>
                    </condition>
                    <exec executable="/bin/sh" resultproperty="docker.oracle.running">
                      <arg value="-c"/>
                      <arg value="docker inspect --format '{{json .State.Running}}' oracle"/>
                    </exec>
                    <condition property="oracle.running" value="true">
                      <equals arg1="${docker.oracle.running}" arg2="0"/>
                    </condition>
                  </target>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <version>0.35.0</version>
            <executions>
              <execution>
                <id>docker-start</id>
                <phase>pre-integration-test</phase>
                <goals>
                  <goal>start</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <verbose>true</verbose>
              <skipPom>true</skipPom>
              <skip>${skipTests}</skip>
              <startParallel>true</startParallel>
              <images>
                <image>
                  <![CDATA[
                    docker run --rm -d --hostname mysql -e MYSQL_DATABASE=jaxdb -e MYSQL_USER=jaxdb -e MYSQL_PASSWORD=jaxdb -e MYSQL_ALLOW_EMPTY_PASSWORD=true -p 13306:3306 --name mysql mysql:5.6
                    mysql -h 127.0.0.1 -P 13306 -D jaxdb -u jaxdb --password=jaxdb
                  ]]>
                  <alias>mysql</alias>
                  <name>mysql:5.6</name>
                  <run>
                    <skip>${mysql.running}</skip>
                    <namingStrategy>alias</namingStrategy>
                    <autoRemove>true</autoRemove>
                    <stopMode>kill</stopMode>
                    <env>
                      <MYSQL_DATABASE>jaxdb</MYSQL_DATABASE>
                      <MYSQL_USER>jaxdb</MYSQL_USER>
                      <MYSQL_PASSWORD>jaxdb</MYSQL_PASSWORD>
                      <MYSQL_ALLOW_EMPTY_PASSWORD>true</MYSQL_ALLOW_EMPTY_PASSWORD>
                    </env>
                    <ports>
                      <port>13306:3306</port>
                    </ports>
                    <wait>
                      <log>MySQL init process done. Ready for start up.</log>
                      <time>60000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <![CDATA[
                    docker run --rm -d --hostname postgres -e POSTGRES_DB=jaxdb -e POSTGRES_USER=jaxdb -e POSTGRES_PASSWORD=jaxdb -p 15432:5432 --name postgres postgres:9-alpine
                    psql "postgresql://jaxdb:jaxdb@127.0.0.1:15432/jaxdb"
                  ]]>
                  <alias>postgres</alias>
                  <name>postgres:9-alpine</name>
                  <run>
                    <skip>${postgres.running}</skip>
                    <namingStrategy>alias</namingStrategy>
                    <autoRemove>true</autoRemove>
                    <stopMode>kill</stopMode>
                    <env>
                      <POSTGRES_DB>jaxdb</POSTGRES_DB>
                      <POSTGRES_USER>jaxdb</POSTGRES_USER>
                      <POSTGRES_PASSWORD>jaxdb</POSTGRES_PASSWORD>
                    </env>
                    <ports>
                      <port>15432:5432</port>
                    </ports>
                    <wait>
                      <log>database system is ready to accept connections</log>
                      <time>60000</time>
                    </wait>
                  </run>
                </image>
                <image>
                  <![CDATA[
                    docker run --rm -d --hostname oracle -e ORACLE_ALLOW_REMOTE=true -e RELAX_SECURITY=1 -p 11521:1521 --name oracle wnameless/oracle-xe-11g-r2 /bin/bash -c 'printf "ALTER SYSTEM SET open_cursors=10000 SCOPE=BOTH;\n ALTER SYSTEM SET processes=150 SCOPE=spfile;\n GRANT ALL PRIVILEGES TO jaxdb IDENTIFIED BY jaxdb;" > /docker-entrypoint-initdb.d/jaxdb.sql && /usr/sbin/startup.sh && tail -f /dev/null'
                    sqlplus "jaxdb/jaxdb@127.0.0.1:11521/xe"
                  ]]>
                  <alias>oracle</alias>
                  <name>wnameless/oracle-xe-11g-r2</name>
                  <run>
                    <skip>${oracle.running}</skip>
                    <namingStrategy>alias</namingStrategy>
                    <autoRemove>true</autoRemove>
                    <stopMode>kill</stopMode>
                    <env>
                      <ORACLE_ALLOW_REMOTE>true</ORACLE_ALLOW_REMOTE>
                      <RELAX_SECURITY>1</RELAX_SECURITY>
                    </env>
                    <ports>
                      <port>11521:1521</port>
                    </ports>
                    <wait>
                      <log>Grant succeeded.</log>
                      <time>60000</time>
                    </wait>
                    <cmd>
                      <exec>
                        <arg>/bin/bash</arg>
                        <arg>-c</arg>
                        <arg>printf "ALTER SYSTEM SET open_cursors=10000 SCOPE=BOTH;\n ALTER SYSTEM SET processes=150 SCOPE=spfile;\n GRANT ALL PRIVILEGES TO jaxdb IDENTIFIED BY jaxdb;" > /docker-entrypoint-initdb.d/jaxdb.sql; /usr/sbin/startup.sh; tail -f /dev/null</arg>
                      </exec>
                    </cmd>
                  </run>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
      <dependencies>
        <dependency>
          <!-- https://www.oracle.com/technetwork/database/enterprise-edition/jdbc-faq-090281.html#01_02 -->
          <groupId>com.oracle.database.jdbc</groupId>
          <artifactId>ojdbc8</artifactId>
          <version>21.1.0.0</version>
          <scope>test</scope>
        </dependency>
      </dependencies>
      <repositories>
        <repository>
          <id>maven.oracle.com</id>
          <url>https://maven.oracle.com</url>
          <snapshots>
            <enabled>false</enabled>
          </snapshots>
        </repository>
      </repositories>
    </profile>
  </profiles>
  <dependencies>
    <dependency>
      <groupId>org.libj</groupId>
      <artifactId>sql</artifactId>
      <version>0.4.8-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.libj</groupId>
      <artifactId>logging</artifactId>
      <version>0.4.6-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>org.libj</groupId>
      <artifactId>test</artifactId>
      <version>0.7.2-SNAPSHOT</version>
      <scope>test</scope>
    </dependency>
  </dependencies>
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.openjax.jaxb</groupId>
        <artifactId>xjc</artifactId>
        <version>0.8.7-SNAPSHOT</version>
      </dependency>
      <dependency>
        <groupId>org.jaxsb</groupId>
        <artifactId>generator</artifactId>
        <version>2.1.7-SNAPSHOT</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
</project>